// Generated by CoffeeScript 1.4.0
(function() {
  var template,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = "<ul class=\"mikey-tabs\">\n  <li class=\"mikey-tab active\" data-mm-tab=\"email\">\n    <a href=\"#\">Email</a>\n  </li>\n  <li class=\"mikey-tab\" data-mm-tab=\"attachments\">\n    <a href=\"#\">Files</a>\n  </li>\n  <li class=\"mikey-tab\" data-mm-tab=\"links\">\n    <a href=\"#\">Links</a>\n  </li>\n</ul>";

  MeetMikey.View.Tabs = (function(_super) {

    __extends(Tabs, _super);

    function Tabs() {
      this.tabClick = __bind(this.tabClick, this);

      this.postRender = __bind(this.postRender, this);
      return Tabs.__super__.constructor.apply(this, arguments);
    }

    Tabs.prototype.template = Handlebars.compile(template);

    Tabs.prototype.events = {
      'click li': 'tabClick'
    };

    Tabs.prototype.postRender = function() {
      var width;
      width = $('.nH').width();
      this.$('.mikey-tabs').css('width', width);
      return $(window).resize(function() {
        width = $('.nH').width();
        return this.$('.mikey-tabs').css('width', width);
      });
    };

    Tabs.prototype.tabClick = function(e) {
      var tab, target;
      e.preventDefault();
      target = $(e.currentTarget);
      this.$('.mikey-tab').removeClass('active');
      target.addClass('active');
      tab = target.attr('data-mm-tab');
      return this.trigger('clicked:tab', tab);
    };

    return Tabs;

  })(MeetMikey.View.Base);

}).call(this);
