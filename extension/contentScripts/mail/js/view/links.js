// Generated by CoffeeScript 1.4.0
(function() {
  var template,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = "{{#unless models}}\n  There doesn't seem to be any links here\n{{else}}\n  <table class=\"inbox-table\" id=\"mm-links-table\" border=\"0\">\n    <thead class=\"labels\">\n      <th class=\"mm-file\">Link</th>\n      <th class=\"mm-source\">Source</th>\n      <th class=\"mm-from\">From</th>\n      <th class=\"mm-to\">To</th>\n      <th class=\"mm-sent\">Sent</th>\n    </thead>\n    <tbody>\n      {{#each models}}\n        <tr class=\"files\">\n          <td class=\"mm-file favicon truncate\">\n            <div class=\"flex\">{{title}}</div>\n          </td>\n          <td class=\"mm-source truncate\">{{url}}</td>\n          <td class=\"mm-from truncate\">{{from}}</td>\n          <td class=\"mm-to truncate\">{{to}}</td>\n          <td class=\"mm-sent truncate\">{{sentDate}}</td>\n        </tr>\n      {{/each}}\n    </tbody>\n  </table>\n{{/unless}}";

  MeetMikey.View.Links = (function(_super) {

    __extends(Links, _super);

    function Links() {
      this.getTemplateData = __bind(this.getTemplateData, this);

      this.teardown = __bind(this.teardown, this);

      this.postInitialize = __bind(this.postInitialize, this);
      return Links.__super__.constructor.apply(this, arguments);
    }

    Links.prototype.template = Handlebars.compile(template);

    Links.prototype.postInitialize = function() {
      this.collection = new MeetMikey.Collection.Links();
      this.collection.on('reset', this.render);
      return this.collection.fetch();
    };

    Links.prototype.teardown = function() {
      return this.collection.off('reset', this.render);
    };

    Links.prototype.getTemplateData = function() {
      return {
        models: _.map(this.collection.models, function(model) {
          return new MeetMikey.Decorator.Link(model);
        })
      };
    };

    Links.prototype.postRender = function() {};

    return Links;

  })(MeetMikey.View.Base);

}).call(this);
