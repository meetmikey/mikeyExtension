// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MeetMikey.Decorator.Attachment = (function() {

    function Attachment(model) {
      this.model = model;
      this.formatDate = __bind(this.formatDate, this);

      this.formatRecipients = __bind(this.formatRecipients, this);

      this.filename = this.model.get('filename');
      this.from = this.model.get('sender').name;
      this.to = this.formatRecipients();
      this.sentDate = this.formatDate();
      this.size = this.formatFileSize();
    }

    Attachment.prototype.formatRecipients = function() {
      return MeetMikey.Helper.formatRecipients(this.model.get('recipients'));
    };

    Attachment.prototype.formatDate = function() {
      return MeetMikey.Helper.formatDate(this.model.get('sentDate'));
    };

    Attachment.prototype.formatFileSize = function(precision) {
      var bytes, convert, gigabyte, kilobyte, megabyte, terabyte;
      if (precision == null) {
        precision = 1;
      }
      bytes = this.model.get('size');
      convert = function(n, unit) {
        return (n / unit).toFixed(precision);
      };
      kilobyte = 1024;
      megabyte = kilobyte * 1024;
      gigabyte = megabyte * 1024;
      terabyte = gigabyte * 1024;
      if ((0 <= bytes && bytes < kilobyte)) {
        return "" + bytes + " B";
      } else if ((kilobyte <= bytes && bytes < megabyte)) {
        return "" + (convert(bytes, kilobyte)) + " KB";
      } else if ((megabyte <= bytes && bytes < gigabyte)) {
        return "" + (convert(bytes, megabyte)) + " MB";
      } else if ((gigabyte <= bytes && bytes < terabyte)) {
        return "" + (convert(bytes, gigabyte)) + " GB";
      } else if (terabyte <= bytes) {
        return "" + (convert(bytes, terabyte)) + " TB";
      } else {
        return "" + bytes + " B";
      }
    };

    return Attachment;

  })();

}).call(this);
