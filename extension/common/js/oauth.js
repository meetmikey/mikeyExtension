// Generated by CoffeeScript 1.4.0
(function() {
  var OAuth,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  OAuth = (function() {

    function OAuth() {
      this.authFail = __bind(this.authFail, this);

      this.refresh = __bind(this.refresh, this);

      this.openAuthWindow = __bind(this.openAuthWindow, this);

      this.authorized = __bind(this.authorized, this);

      this.authorize = __bind(this.authorize, this);

      this.getUserInfo = __bind(this.getUserInfo, this);

      this.storeUserInfo = __bind(this.storeUserInfo, this);

      this.userKey = __bind(this.userKey, this);

      this.isUserEmail = __bind(this.isUserEmail, this);

    }

    OAuth.prototype.getUserEmail = function() {
      return $('#gbmpdv .gbps2').text();
    };

    OAuth.prototype.isUserEmail = function(email) {
      return email === this.getUserEmail();
    };

    OAuth.prototype.userKeyTemplate = function(email) {
      return "meetmikey-" + email;
    };

    OAuth.prototype.userKey = function() {
      return this.userKeyTemplate(this.getUserEmail());
    };

    OAuth.prototype.storeUserInfo = function(data) {
      return MeetMikey.Helper.LocalStore.set(this.userKey(), data);
    };

    OAuth.prototype.getUserInfo = function() {
      return MeetMikey.Helper.LocalStore.get(this.userKey());
    };

    OAuth.prototype.authorize = function(callback) {
      var data;
      data = this.getUserInfo();
      if ((data != null ? data.refreshToken : void 0) != null) {
        return this.refresh(data, callback);
      } else {
        return this.openAuthWindow(callback);
      }
    };

    OAuth.prototype.authorized = function() {
      return this.getUserInfo() != null;
    };

    OAuth.prototype.openAuthWindow = function(callback) {
      var handleMessage,
        _this = this;
      handleMessage = function(e) {
        var event, userObject;
        event = e.originalEvent;
        if (event.origin !== 'https://local.meetmikey.com') {
          return;
        }
        $(window).off('message', handleMessage);
        userObject = JSON.parse(event.data);
        if (_this.isUserEmail(userObject.email)) {
          _this.storeUserInfo(userObject);
          return callback(userObject);
        } else {
          return _this.authFail();
        }
      };
      $(window).on('message', handleMessage);
      return window.open(MeetMikey.Settings.APIUrl + '/auth/google');
    };

    OAuth.prototype.refresh = function(callback) {
      var data,
        _this = this;
      data = this.getUserInfo();
      if ((data != null ? data.refreshToken : void 0) == null) {
        return callback(null);
      }
      return $.ajax({
        url: "" + MeetMikey.Settings.APIUrl + "/auth/refresh",
        type: 'POST',
        data: {
          refreshToken: data.refreshToken,
          email: data.email
        },
        success: function(res) {
          if (_this.isUserEmail(res.email)) {
            return callback(res);
          } else {
            return callback(null);
          }
        },
        error: function() {
          return callback(null);
        }
      });
    };

    OAuth.prototype.authFail = function() {};

    return OAuth;

  })();

  MeetMikey.Helper.OAuth = new OAuth();

}).call(this);
